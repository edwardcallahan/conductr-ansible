---
- name: Install  libselinux-python
  yum: name=libselinux-python state=latest

- name: Copy ConductR
  copy: src=conductr/files/{{ CONDUCTR_PKG }} dest=/home/{{ REMOTE_USER }}
  
- name: Install ConductR
  yum: name=/home/{{ REMOTE_USER }}/{{ CONDUCTR_PKG }}

- name: Install Conductr-Haproxy
  yum: name=/usr/share/conductr/extra/{{ CONDUCTR_HAPROXY_PKG }}

- command: rm /home/{{ REMOTE_USER }}/{{ CONDUCTR_PKG }}

- name: Install ius
  yum: name=https://centos7.iuscommunity.org/ius-release.rpm

# Fails under ansible. Update cache?
#- name: Setup Python
#  yum: python34u state=latest

- name: Setup for CLI
  yum: name={{ item }} state=latest
  with_items:
    - python-setuptools
  when: "{{ INSTALL_CLI }} == true"

#- name: Install ConductR CLI
#  command: pip3 install -U conductr-cli
#  become: yes
#  become_method: sudo
#  when: "{{ INSTALL_CLI }} == true"

- shell: 'echo -Dconductr.ip=$(hostname -i)| sudo tee -a /usr/share/conductr/conf/application.ini'
  become: yes
  become_method: sudo

- shell: 'echo --seed {{ groups.seeds_private[0]}}:9004 | sudo tee -a /usr/share/conductr/conf/application.ini'
  with_items: "{{ groups.seeds_public }}"
  become: yes
  become_method: sudo
  when: item != "{{ inventory_hostname }}"

- shell: 'echo -Dakka.loglevel=debug | sudo tee -a /usr/share/conductr/conf/application.ini'
  become: yes
  become_method: sudo
  when: "{{ ENABLE_DEBUG }} == true"

- shell: 'echo -Dconductr-haproxy.ip=$(hostname -i) | sudo tee -a /usr/share/conductr-haproxy/conf/application.ini'
  become: yes
  become_method: sudo

- shell: 'echo export CONDUCTR_IP=$(hostname -i) | sudo tee -a /etc/profile'
  become: yes
  become_method: sudo

- command: chown conductr-haproxy:conductr-haproxy /etc/haproxy/haproxy.cfg
  become: yes
  become_method: sudo

- shell: 'echo "conductr-haproxy ALL=(root) NOPASSWD: /usr/bin/reloadHAProxy.sh" | sudo tee -a /etc/sudoers'
  become: yes
  become_method: sudo

- shell: 'echo "Defaults: conductr-haproxy  !requiretty" | sudo tee -a /etc/sudoers'
  become: yes
  become_method: sudo
 
- shell: "echo '$ModLoad imtcp' | sudo tee -a /etc/rsyslog.d/conductr.conf"
  become: yes
  become_method: sudo

- shell: "echo '$InputTCPServerRun 514' | sudo tee -a /etc/rsyslog.d/conductr.conf"
  become: yes
  become_method: sudo

- command: mkdir -p /var/lib/elasticsearch /var/log/elasticsearch
  become: yes
  become_method: sudo

- command: chown conductr:conductr /var/lib/elasticsearch
  become: yes
  become_method: sudo

- command: chown conductr:conductr /var/log/elasticsearch
  become: yes
  become_method: sudo

- shell: 'echo -Dcontrail.syslog.server.host=127.0.0.1  | sudo tee -a /usr/share/conductr/conf/application.ini'
  become: yes
  become_method: sudo

- shell: 'echo -Dcontrail.syslog.server.port=9200  | sudo tee -a /usr/share/conductr/conf/application.ini'
  become: yes
  become_method: sudo

- shell: 'echo -Dcontrail.syslog.server.elasticsearch.enabled=on | sudo tee -a /usr/share/conductr/conf/application.ini'
  become: yes
  become_method: sudo

# Sorry handlers, gotta do these now for ELB
- service: name=conductr state=restarted
- service: name=conductr-haproxy state=restarted
- service: name=rsyslog state=restarted
- service: name=haproxy state=restarted

- debug: var={{ hostvars[inventory_hostname].ansible_all_ipv4_addresses[0] }}

- wait_for: host={{ hostvars[inventory_hostname].ansible_all_ipv4_addresses[0] }}
            port=9005
            state=started

- name: Get instance id
  get_url: url=http://169.254.169.254/latest/meta-data/instance-id dest=/home/{{ REMOTE_USER }}/instance-id.txt

- shell: "cat /home/{{ REMOTE_USER }}/instance-id.txt"
  register: instanceid

- debug: msg="Instance id -- {{ instanceid.stdout }}"

- name: Register with ELB
  local_action:
    module: ec2_elb
    instance_id: "{{ instanceid.stdout }}"
    ec2_elbs: "{{ ELB }}"
    region: "{{ EC2_REGION }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    wait: yes

